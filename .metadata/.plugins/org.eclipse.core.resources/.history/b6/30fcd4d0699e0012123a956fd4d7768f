/**
 * 
 */
package LeetCode;

/**
 * @author Wenzhe
 * @date 4/5/2013
 * 
 */
public class Binary_Tree_Maximum_Path_Sum {

	public int max = 0;

	public int maxPathSum(TreeNode root) {

		int[] res = dfs(root);
		return res[0];
	}

	public int[] dfs(TreeNode root) {

		int[] res = new int[2];
		if (root == null) {
			res[0] = 0;
			res[1] = 0;
			return res;
		}
		int[] l = dfs(root.left);
		int[] r = dfs(root.right);

		if (l[1] == 1 && r[1] == 1) {
			if (root.val >= 0) {
				res[0] = Math.max(l[0], r[0]) > 0 ? Math.max(l[0], r[0])
						+ root.val : root.val;
				res[1] = 1;
				return res;
			}
		}

		return res;

	}
}

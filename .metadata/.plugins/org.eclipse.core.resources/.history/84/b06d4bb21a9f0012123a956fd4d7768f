/**
 * 
 */
package LeetCode;

/**
 * @author Wenzhe
 * @date 4/6/2013
 * 
 */
public class Balanced_Binary_Tree {

	public boolean isBalanced(TreeNode root) {
		if (root == null) {
			return true;
		}

		if (!isBalanced(root.left) || !isBalanced(root.right)) {
			return false;
		} else {
			return (Math.abs(height(root.left) - height(root.right)) <= 1);
		}

	}

	private int height(TreeNode node) {
		// TODO Auto-generated method stub
		if (node == null)
			return 0;
		return Math.max(height(node.left), height(node.right)) + 1;
	}

	public static void main(String args[]) {
		TreeNode root = new TreeNode(0);
		for (int i = 1; i < 33; i++) {
			root.left = new TreeNode(1);
		}
	}

}

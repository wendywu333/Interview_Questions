/**
 * 
 */
package LeetCode;

/**
 * @author Wenzhe
 * @date Jul 6, 2013
 * 
 */
public class Partition_List {

	public ListNode partition(ListNode head, int x) {

		if (head == null)
			return null;
		// Start typing your Java solution below
		// DO NOT write main() function
		ListNode placeholder = new ListNode(x - 1);
		placeholder.next = head;
		ListNode prev = placeholder;
		head = placeholder;
		ListNode temp;
		while (head != null) {
			if (head.val < x) {
				temp = head.next;
				head.next = prev.next;
				prev.next = head;
				prev = prev.next;
				head = temp;
			} else {
				head = head.next;
			}
		}
		return placeholder.next;
	}

	public static void main(String args[]) {
		ListNode a = new ListNode(2);
		a.next = new ListNode(1);
		Partition_List o = new Partition_List();
		o.partition(a, 2);
	}

}

// public ListNode partition(ListNode head, int x) {
// // Start typing your Java solution below
// // DO NOT write main() function
// ListNode placeholder = new ListNode(0);
// ListNode pivot = new ListNode(0);
// ListNode prev = placeholder;
// ListNode last = pivot;
// while (head != null) {
// if (head.val < x) {
// prev.next = head;
// prev = prev.next;
// } else {
// last.next = head;
// last = last.next;
// }
// head = head.next;
// }
// prev.next = pivot.next;
// // System.out.println(placeholder.next.val);
// return placeholder.next;
//
// }

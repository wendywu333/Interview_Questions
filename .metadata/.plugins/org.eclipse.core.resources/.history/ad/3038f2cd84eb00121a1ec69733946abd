/**
 * 
 */
package LeetCode;

import java.util.ArrayList;

/**
 * @author Wenzhe
 * @date Jul 12, 2013
 * 
 */
public class Triangle {

	public int minimumTotal(ArrayList<ArrayList<Integer>> triangle) {
		// Start typing your Java solution below
		// DO NOT write main() function
		if (triangle == null || triangle.size() == 0)
			return 0;
		int n = triangle.size();
		int[] min = new int[n];
		// index of chosen element
		int[] pick = new int[n];

		min[0] = triangle.get(0).get(0);
		pick[0] = 0;

		for (int i = 1; i <= n - 1; i++) {

			int a = triangle.get(i).get(pick[i - 1]);
			int b = triangle.get(i).get(pick[i - 1] + 1);

			if (a < b) {
				pick[i] = pick[i - 1];
				min[i] = min[i - 1] + a;
			} else {
				pick[i] = pick[i - 1] + 1;
				min[i] = min[i - 1] + b;
			}

		}
		return min[n - 1];
	}
}
